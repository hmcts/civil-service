tags:
  civil-ccd-stack: true

postgresql:
  enabled: true
  image:
    registry: hmctspublic.azurecr.io
    repository: imported/bitnami/postgresql
    tag: '11.3.0'
    pullPolicy: Always
    debug: true
  resources:
    requests:
      cpu: 25m
  initdbScripts:
    init.sql: |-
      CREATE DATABASE cmc WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
      CREATE DATABASE "data-store" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
      CREATE DATABASE "definition-store" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
      CREATE DATABASE "user-profile" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
      CREATE DATABASE "camunda" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
  postgresqlUsername: ${POSTGRES_USER}
  postgresqlPassword: ${POSTGRES_PASSWORD}
  persistence:
    enabled: false

java:
  image: ${IMAGE_NAME}
  ingressHost: ${SERVICE_FQDN}
  keyVaults:
    civil:
      resourceGroup: civil
      secrets:
        - civil-idam-client-secret
        - microservicekey-civil-service
        - system-update-user-username
        - system-update-user-password
        - cross-access-user-username
        - cross-access-user-password
        - prd-admin-user-username
        - prd-admin-user-password
        - AppInsightsInstrumentationKey
        - docmosis-api-key
        - gov-notify-api-key
        - sendgrid-api-key
        - robotics-notification-sender
        - robotics-notification-recipient
        - launch-darkly-sdk-key
  environment:
    CORE_CASE_DATA_API_URL: http://${SERVICE_NAME}-ccd-data-store-api
    OIDC_ISSUER: https://forgerock-am.service.core-compute-idam-aat2.internal:8443/openam/oauth2/realms/root/realms/hmcts
    CMC_DB_HOST: ${SERVICE_NAME}-postgresql
    CMC_DB_USERNAME: ${POSTGRES_USER}
    CMC_DB_PASSWORD: ${POSTGRES_PASSWORD}
    CMC_DB_CONNECTION_OPTIONS: '?sslmode=allow'
    REFERENCE_DATABASE_MIGRATION: true
    FEIGN_CLIENT_CONFIG_REMOTERUNTIMESERVICE_URL: http://civil-service-camunda-staging-aat.service.core-compute-aat.internal/engine-rest/
    FEIGN_CLIENT_CONFIG_REMOTEEXTERNALTASKSERVICE_URL: http://civil-service-camunda-staging-aat.service.core-compute-aat.internal/engine-rest/
    FEIGN_CLIENT_CONFIG_REMOTEREPOSITORYSERVICE_URL: http://civil-service-camunda-staging-aat.service.core-compute-aat.internal/engine-rest/
    TESTING_SUPPORT_ENABLED: true
    POLLING_EVENT_EMITTER_ENABLED: false
    LAUNCH_DARKLY_ENV: service-staging


idam-pr:
  releaseNameOverride: ${SERVICE_NAME}-xui-idam-pr
  enabled: true
  redirect_uris:
    XUI:
      - https://civil-service-xui-staging.aat.platform.hmcts.net/oauth2/callback

xui-webapp:
  enabled: true
  nodejs:
    imagePullPolicy: Always
    releaseNameOverride: ${SERVICE_NAME}-xui-webapp
    image: hmctspublic.azurecr.io/xui/webapp:prod-816d45c5
    ingressHost: civil-service-xui-staging.aat.platform.hmcts.net
    environment:
      HEALTH_CCD_COMPONENT_API: http://${SERVICE_NAME}-ccd-api-gw/health
      HEALTH_CCD_DATA_API: http://${SERVICE_NAME}-ccd-data-store-api/health
      HEALTH_TERMS_AND_CONDITIONS_API: http://xui-terms-and-conditions-aat.service.core-compute-aat.internal/health
      SERVICES_CCD_COMPONENT_API: http://${SERVICE_NAME}-ccd-api-gw
      SERVICES_CCD_DATA_STORE_API: http://${SERVICE_NAME}-ccd-data-store-api
      SERVICES_TERMS_AND_CONDITIONS: http://xui-terms-and-conditions-aat.service.core-compute-aat.internal
      JURISDICTIONS: DIVORCE,PROBATE,FR,PUBLICLAW,IA,SSCS,EMPLOYMENT,CIVIL
      SERVICES_IDAM_ISS_URL: https://forgerock-am.service.core-compute-idam-aat2.internal:8443/openam/oauth2/hmcts

ccd:
  ccd:
    adminWeb:
      enabled: false
    apiGatewayWeb:
      enabled: true
    definitionImporter:
      enabled: false
    managementWeb:
      enabled: false
    s2s:
      enabled: false
    postgresql:
      enabled: false

  global:
    ccdApiGatewayIngress: http://${SERVICE_NAME}-ccd-api-gw
    ccdDataStoreUrl: http://civil-service-data-store-staging-aat.service.core-compute-aat.internal
    ccdDefinitionStoreUrl: http://civil-service-definition-store-staging-aat.service.core-compute-aat.internal
    ccdUserProfileUrl: http://${SERVICE_NAME}-ccd-user-profile-api
    dmStoreUrl: http://dm-store-aat.service.core-compute-aat.internal
    idamApiUrl: https://idam-api.aat.platform.hmcts.net
    idamWebUrl: https://idam-web-public.aat.platform.hmcts.net
    s2sUrl: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal

  ccd-api-gateway-web:
    nodejs:
      imagePullPolicy: Always
      environment:
        ADDRESS_LOOKUP_TOKEN: ${ADDRESS_LOOKUP_TOKEN}
        IDAM_SERVICE_KEY: ${CCD_API_GATEWAY_S2S_SECRET}
        IDAM_OAUTH2_CLIENT_SECRET: ${CCD_API_GATEWAY_IDAM_CLIENT_SECRET}
        PROXY_DOCUMENT_MANAGEMENT: http://dm-store-aat.service.core-compute-aat.internal
      ingressHost: gateway-${SERVICE_FQDN}
      ingressIP: ${INGRESS_IP}
      keyVaults: []
  ccd-data-store-api:
    java:
      imagePullPolicy: Always
      environment:
        DATA_STORE_DB_HOST: ${SERVICE_NAME}-postgresql
        DATA_STORE_IDAM_KEY: ${CCD_DATA_STORE_S2S_SECRET}
        DATA_STORE_S2S_AUTHORISED_SERVICES: ccd_data,ccd_gw,ccd_ps,bulk_scan_orchestrator,ccpay_bubble,ctsc_work_allocation,em_ccd_orchestrator,xui_webapp,civil_service
        IDAM_USER_URL: https://idam-web-public.aat.platform.hmcts.net
        OIDC_ISSUER: https://forgerock-am.service.core-compute-idam-aat2.internal:8443/openam/oauth2/realms/root/realms/hmcts
        CCD_S2S_AUTHORISED_SERVICES_CASE_USER_ROLES: civil_service
      keyVaults: []
      ingressHost: civil-service-data-store-staging-aat.service.core-compute-aat.internal
  ccd-definition-store-api:
    java:
      imagePullPolicy: Always
      environment:
        DEFINITION_STORE_DB_HOST: ${SERVICE_NAME}-postgresql
        DEFINITION_STORE_IDAM_KEY: ${CCD_DEFINITION_STORE_S2S_SECRET}
        IDAM_USER_URL: https://idam-web-public.aat.platform.hmcts.net
      keyVaults: []
      ingressHost: civil-service-definition-store-staging-aat.service.core-compute-aat.internal
  ccd-user-profile-api:
    java:
      imagePullPolicy: Always
      enviroment:
        USER_PROFILE_DB_HOST: ${SERVICE_NAME}-postgresql
      keyVaults: []
      ingressHost: ccd-user-profile-api-${SERVICE_FQDN}

  postgresql:
    persistence:
      enabled: false

camunda-bpm:
  enabled: true
  java:
    disableKeyVaults: true
    releaseNameOverride: ${SERVICE_NAME}-camunda
    ingressHost: civil-service-camunda-staging-aat.service.core-compute-aat.internal
    environment:
      CAMUNDA_API_AUTH_ENABLED: false
      CAMUNDA_DB_HOST: ${SERVICE_NAME}-postgresql
      CAMUNDA_DB_NAME: camunda
      CAMUNDA_DB_USER_NAME: ${POSTGRES_USER}
      CAMUNDA_DB_PASSWORD: ${POSTGRES_PASSWORD}
      CAMUNDA_BPM_DATABASE_SCHEMA_UPDATE: true
      S2S_URL: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
      CAMUNDA_DB_CONN_OPTIONS: ""
