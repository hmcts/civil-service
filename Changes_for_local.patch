Index: src/main/java/uk/gov/hmcts/reform/civil/handler/callback/camunda/docmosis/GenerateHearingFormHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uk/gov/hmcts/reform/civil/handler/callback/camunda/docmosis/GenerateHearingFormHandler.java b/src/main/java/uk/gov/hmcts/reform/civil/handler/callback/camunda/docmosis/GenerateHearingFormHandler.java
--- a/src/main/java/uk/gov/hmcts/reform/civil/handler/callback/camunda/docmosis/GenerateHearingFormHandler.java	(revision 97207e094da677d088b1fdac8c20ca72a7acf321)
+++ b/src/main/java/uk/gov/hmcts/reform/civil/handler/callback/camunda/docmosis/GenerateHearingFormHandler.java	(date 1718789781042)
@@ -53,7 +53,7 @@
     private CallbackResponse generateClaimForm(CallbackParams callbackParams) {
         CaseData caseData = callbackParams.getCaseData();
         CaseData.CaseDataBuilder<?, ?> caseDataBuilder = caseData.toBuilder();
-        buildDocument(callbackParams, caseDataBuilder, caseData);
+        //buildDocument(callbackParams, caseDataBuilder, caseData);
 
         return AboutToStartOrSubmitCallbackResponse.builder()
             .data(caseDataBuilder.build().toMap(objectMapper))
Index: src/main/java/uk/gov/hmcts/reform/civil/handler/callback/camunda/caseevents/SendHearingToLiPCallbackHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uk/gov/hmcts/reform/civil/handler/callback/camunda/caseevents/SendHearingToLiPCallbackHandler.java b/src/main/java/uk/gov/hmcts/reform/civil/handler/callback/camunda/caseevents/SendHearingToLiPCallbackHandler.java
--- a/src/main/java/uk/gov/hmcts/reform/civil/handler/callback/camunda/caseevents/SendHearingToLiPCallbackHandler.java	(revision 97207e094da677d088b1fdac8c20ca72a7acf321)
+++ b/src/main/java/uk/gov/hmcts/reform/civil/handler/callback/camunda/caseevents/SendHearingToLiPCallbackHandler.java	(date 1718789781009)
@@ -55,8 +55,8 @@
 
     private CallbackResponse sendHearingLetter(CallbackParams callbackParams) {
         CaseData caseData = callbackParams.getCaseData();
-        sendHearingBulkPrintService.sendHearingToLIP(
-            callbackParams.getParams().get(BEARER_TOKEN).toString(), caseData, camundaActivityId(callbackParams));
+        //sendHearingBulkPrintService.sendHearingToLIP(
+        //    callbackParams.getParams().get(BEARER_TOKEN).toString(), caseData, camundaActivityId(callbackParams));
         return AboutToStartOrSubmitCallbackResponse.builder()
             .build();
     }
Index: dashboard-notifications/src/test/java/uk/gov/hmcts/reform/dashboard/services/DashboardScenariosServiceTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dashboard-notifications/src/test/java/uk/gov/hmcts/reform/dashboard/services/DashboardScenariosServiceTest.java b/dashboard-notifications/src/test/java/uk/gov/hmcts/reform/dashboard/services/DashboardScenariosServiceTest.java
--- a/dashboard-notifications/src/test/java/uk/gov/hmcts/reform/dashboard/services/DashboardScenariosServiceTest.java	(revision 97207e094da677d088b1fdac8c20ca72a7acf321)
+++ b/dashboard-notifications/src/test/java/uk/gov/hmcts/reform/dashboard/services/DashboardScenariosServiceTest.java	(date 1718789780994)
@@ -65,7 +65,7 @@
                                         .build()));
 
         when(notificationTemplateRepository.findByName(NOTIFICATION_ISSUE_CLAIM_START))
-            .thenReturn(Optional.of(NotificationTemplateEntity.builder()
+            .thenReturn(List.of(NotificationTemplateEntity.builder()
                                         .name(NOTIFICATION_ISSUE_CLAIM_START)
                                         .role("claimant")
                                         .titleEn("The ${animal} jumped over the ${target}.")
@@ -76,7 +76,7 @@
                                         .build()));
 
         when(notificationTemplateRepository.findByName(NOTIFICATION_DRAFT_CLAIM_START))
-            .thenReturn(Optional.of(NotificationTemplateEntity.builder()
+            .thenReturn(List.of(NotificationTemplateEntity.builder()
                                         .name(NOTIFICATION_DRAFT_CLAIM_START)
                                         .role("claimant")
                                         .titleEn("The ${animal} jumped over the ${target}.")
Index: src/main/java/uk/gov/hmcts/reform/civil/handler/callback/camunda/caseevents/SendSDOToLiPDefendantCallbackHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uk/gov/hmcts/reform/civil/handler/callback/camunda/caseevents/SendSDOToLiPDefendantCallbackHandler.java b/src/main/java/uk/gov/hmcts/reform/civil/handler/callback/camunda/caseevents/SendSDOToLiPDefendantCallbackHandler.java
--- a/src/main/java/uk/gov/hmcts/reform/civil/handler/callback/camunda/caseevents/SendSDOToLiPDefendantCallbackHandler.java	(revision 97207e094da677d088b1fdac8c20ca72a7acf321)
+++ b/src/main/java/uk/gov/hmcts/reform/civil/handler/callback/camunda/caseevents/SendSDOToLiPDefendantCallbackHandler.java	(date 1718789781011)
@@ -45,7 +45,7 @@
 
     private CallbackResponse sendSDOLetter(CallbackParams callbackParams) {
         CaseData caseData = callbackParams.getCaseData();
-        sendSDOBulkPrintService.sendSDOToDefendantLIP(callbackParams.getParams().get(BEARER_TOKEN).toString(), caseData);
+        //sendSDOBulkPrintService.sendSDOToDefendantLIP(callbackParams.getParams().get(BEARER_TOKEN).toString(), caseData);
 
         return AboutToStartOrSubmitCallbackResponse.builder()
             .build();
Index: src/main/java/uk/gov/hmcts/reform/civil/handler/callback/camunda/docmosis/GenerateResponseSealedSpec.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uk/gov/hmcts/reform/civil/handler/callback/camunda/docmosis/GenerateResponseSealedSpec.java b/src/main/java/uk/gov/hmcts/reform/civil/handler/callback/camunda/docmosis/GenerateResponseSealedSpec.java
--- a/src/main/java/uk/gov/hmcts/reform/civil/handler/callback/camunda/docmosis/GenerateResponseSealedSpec.java	(revision 97207e094da677d088b1fdac8c20ca72a7acf321)
+++ b/src/main/java/uk/gov/hmcts/reform/civil/handler/callback/camunda/docmosis/GenerateResponseSealedSpec.java	(date 1718789781056)
@@ -80,7 +80,7 @@
             assignCategoryId.assignCategoryIdToCaseDocument(copy, DocCategory.DQ_DEF2.getValue());
         }
 
-        if (stitchEnabled) {
+        if (!stitchEnabled) {
             List<DocumentMetaData> documentMetaDataList = fetchDocumentsToStitch(caseData, sealedForm);
             CaseDocument stitchedDocument = civilDocumentStitchingService.bundle(
                 documentMetaDataList,
Index: src/main/java/uk/gov/hmcts/reform/civil/handler/event/BundleCreationTriggerEventHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uk/gov/hmcts/reform/civil/handler/event/BundleCreationTriggerEventHandler.java b/src/main/java/uk/gov/hmcts/reform/civil/handler/event/BundleCreationTriggerEventHandler.java
--- a/src/main/java/uk/gov/hmcts/reform/civil/handler/event/BundleCreationTriggerEventHandler.java	(revision 97207e094da677d088b1fdac8c20ca72a7acf321)
+++ b/src/main/java/uk/gov/hmcts/reform/civil/handler/event/BundleCreationTriggerEventHandler.java	(date 1718789796684)
@@ -46,10 +46,11 @@
      */
     @EventListener
     public void sendBundleCreationTrigger(BundleCreationTriggerEvent event) {
-        BundleCreateResponse bundleCreateResponse = bundleCreationService.createBundle(event);
+        //BundleCreateResponse bundleCreateResponse = bundleCreationService.createBundle(event);
 
         String caseId = event.getCaseId().toString();
         StartEventResponse startEventResponse = coreCaseDataService.startUpdate(caseId, CREATE_BUNDLE);
+<<<<<<< Updated upstream
         CaseData caseData = caseDetailsConverter.toCaseData(startEventResponse.getCaseDetails().getData());
 
         List<IdValue<Bundle>> caseBundles = caseData.getCaseBundles();
@@ -57,6 +58,21 @@
                                .stream().map(bundle -> prepareNewBundle(bundle, caseData)
             ).toList());
         CaseDataContent caseContent = prepareCaseContent(caseBundles, startEventResponse);
+=======
+//        CaseData caseData = caseDetailsConverter.toCaseData(startEventResponse.getCaseDetails().getData());
+//
+//        List<IdValue<Bundle>> caseBundles = caseData.getCaseBundles();
+//        caseBundles.addAll(bundleCreateResponse.getData().getCaseBundles()
+//                               .stream().map(bundle -> prepareNewBundle(bundle, caseData)
+//            ).collect(Collectors.toList()));
+        CaseDataContent caseContent = CaseDataContent.builder()
+            .eventToken(startEventResponse.getToken())
+            .event(Event.builder()
+                       .id(startEventResponse.getEventId())
+                       .summary("bundle created")
+                       .build())
+            .build();
+>>>>>>> Stashed changes
         coreCaseDataService.submitUpdate(caseId, caseContent);
         coreCaseDataService.triggerEvent(event.getCaseId(), BUNDLE_CREATION_NOTIFICATION);
     }
Index: src/main/java/uk/gov/hmcts/reform/civil/handler/callback/user/CreateSDOCallbackHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uk/gov/hmcts/reform/civil/handler/callback/user/CreateSDOCallbackHandler.java b/src/main/java/uk/gov/hmcts/reform/civil/handler/callback/user/CreateSDOCallbackHandler.java
--- a/src/main/java/uk/gov/hmcts/reform/civil/handler/callback/user/CreateSDOCallbackHandler.java	(revision 97207e094da677d088b1fdac8c20ca72a7acf321)
+++ b/src/main/java/uk/gov/hmcts/reform/civil/handler/callback/user/CreateSDOCallbackHandler.java	(date 1718789781087)
@@ -155,6 +155,7 @@
 import static uk.gov.hmcts.reform.civil.constants.SdoR2UiConstantSmallClaim.RESTRICT_NUMBER_PAGES_TEXT2;
 import static uk.gov.hmcts.reform.civil.constants.SdoR2UiConstantSmallClaim.RESTRICT_WITNESS_TEXT;
 import static uk.gov.hmcts.reform.civil.constants.SdoR2UiConstantSmallClaim.WITNESS_DESCRIPTION_TEXT;
+import static uk.gov.hmcts.reform.civil.documentmanagement.model.DocumentType.SDO_ORDER;
 import static uk.gov.hmcts.reform.civil.enums.AllocatedTrack.FAST_CLAIM;
 import static uk.gov.hmcts.reform.civil.enums.AllocatedTrack.SMALL_CLAIM;
 import static uk.gov.hmcts.reform.civil.enums.YesOrNo.NO;
@@ -1539,13 +1540,20 @@
 
         CaseData caseData = callbackParams.getCaseData();
 
-        CaseDocument document = caseData.getSdoOrderDocument();
-        if (document != null) {
-            List<Element<CaseDocument>> generatedDocuments = callbackParams.getCaseData()
-                .getSystemGeneratedCaseDocuments();
-            generatedDocuments.add(element(document));
-            dataBuilder.systemGeneratedCaseDocuments(generatedDocuments);
-        }
+        CaseDocument sdoDocument = caseData.getSystemGeneratedCaseDocuments().get(0).getValue();
+        sdoDocument = sdoDocument.toBuilder()
+            .createdBy(sdoDocument.getCreatedBy())
+            .createdDatetime(sdoDocument.getCreatedDatetime())
+            .documentLink(sdoDocument.getDocumentLink())
+            .documentName(sdoDocument.getDocumentName())
+            .ownedBy(sdoDocument.getOwnedBy())
+            .documentType(SDO_ORDER)
+            .build();
+        List<Element<CaseDocument>> generatedDocuments = callbackParams.getCaseData()
+            .getSystemGeneratedCaseDocuments();
+        generatedDocuments.add(element(sdoDocument));
+        dataBuilder.systemGeneratedCaseDocuments(generatedDocuments);
+
         // null/remove preview SDO document, otherwise it will show as duplicate within case file view
         dataBuilder.sdoOrderDocument(null);
 
Index: src/main/java/uk/gov/hmcts/reform/civil/service/citizen/UpdateCaseManagementDetailsService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uk/gov/hmcts/reform/civil/service/citizen/UpdateCaseManagementDetailsService.java b/src/main/java/uk/gov/hmcts/reform/civil/service/citizen/UpdateCaseManagementDetailsService.java
--- a/src/main/java/uk/gov/hmcts/reform/civil/service/citizen/UpdateCaseManagementDetailsService.java	(revision 97207e094da677d088b1fdac8c20ca72a7acf321)
+++ b/src/main/java/uk/gov/hmcts/reform/civil/service/citizen/UpdateCaseManagementDetailsService.java	(date 1718789781125)
@@ -128,12 +128,8 @@
             return requestedCourt;
         }
         String locationLabel = requestedCourt.getCaseLocation().getBaseLocation();
-        LocationRefData preferredLocation = locations.stream()
-            .filter(locationRefData -> courtLocationUtils.checkLocation(locationRefData, locationLabel))
-            .findFirst().orElseThrow(RuntimeException::new);
+
         return requestedCourt.toBuilder()
-            .responseCourtCode(preferredLocation.getCourtLocationCode())
-            .caseLocation(LocationHelper.buildCaseLocation(preferredLocation))
             .build();
     }
 
Index: dashboard-notifications/src/main/java/uk/gov/hmcts/reform/dashboard/repositories/NotificationTemplateRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dashboard-notifications/src/main/java/uk/gov/hmcts/reform/dashboard/repositories/NotificationTemplateRepository.java b/dashboard-notifications/src/main/java/uk/gov/hmcts/reform/dashboard/repositories/NotificationTemplateRepository.java
--- a/dashboard-notifications/src/main/java/uk/gov/hmcts/reform/dashboard/repositories/NotificationTemplateRepository.java	(revision 97207e094da677d088b1fdac8c20ca72a7acf321)
+++ b/dashboard-notifications/src/main/java/uk/gov/hmcts/reform/dashboard/repositories/NotificationTemplateRepository.java	(date 1718789780977)
@@ -5,6 +5,7 @@
 import uk.gov.hmcts.reform.dashboard.entities.NotificationTemplateEntity;
 
 import javax.transaction.Transactional;
+import java.util.List;
 import java.util.Optional;
 
 @Transactional
@@ -13,5 +14,5 @@
 
     Optional<NotificationTemplateEntity> findById(Long id);
 
-    Optional<NotificationTemplateEntity> findByName(String scenarioReference);
+    List<NotificationTemplateEntity> findByName(String scenarioReference);
 }
Index: src/main/java/uk/gov/hmcts/reform/civil/handler/callback/camunda/notification/ClaimContinuingOnlineRespondentPartyForSpecNotificationHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uk/gov/hmcts/reform/civil/handler/callback/camunda/notification/ClaimContinuingOnlineRespondentPartyForSpecNotificationHandler.java b/src/main/java/uk/gov/hmcts/reform/civil/handler/callback/camunda/notification/ClaimContinuingOnlineRespondentPartyForSpecNotificationHandler.java
--- a/src/main/java/uk/gov/hmcts/reform/civil/handler/callback/camunda/notification/ClaimContinuingOnlineRespondentPartyForSpecNotificationHandler.java	(revision 97207e094da677d088b1fdac8c20ca72a7acf321)
+++ b/src/main/java/uk/gov/hmcts/reform/civil/handler/callback/camunda/notification/ClaimContinuingOnlineRespondentPartyForSpecNotificationHandler.java	(date 1718789781070)
@@ -76,7 +76,7 @@
             generatePIPEmail(caseData);
         }
 
-        generatePIPLetter(callbackParams);
+        //generatePIPLetter(callbackParams);
 
         String updateCaseState = setClaimState(caseData);
         return AboutToStartOrSubmitCallbackResponse.builder()
Index: src/main/java/uk/gov/hmcts/reform/civil/handler/callback/camunda/docmosis/GenerateCUIResponseSealedFormCallBackHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uk/gov/hmcts/reform/civil/handler/callback/camunda/docmosis/GenerateCUIResponseSealedFormCallBackHandler.java b/src/main/java/uk/gov/hmcts/reform/civil/handler/callback/camunda/docmosis/GenerateCUIResponseSealedFormCallBackHandler.java
--- a/src/main/java/uk/gov/hmcts/reform/civil/handler/callback/camunda/docmosis/GenerateCUIResponseSealedFormCallBackHandler.java	(revision 97207e094da677d088b1fdac8c20ca72a7acf321)
+++ b/src/main/java/uk/gov/hmcts/reform/civil/handler/callback/camunda/docmosis/GenerateCUIResponseSealedFormCallBackHandler.java	(date 1718789781030)
@@ -76,7 +76,7 @@
                 ));
         assignCategoryId.assignCategoryIdToCaseDocument(sealedForm, DocCategory.DEF1_DEFENSE_DQ.getValue());
 
-        if (stitchEnabled && caseData.isLipvLipOneVOne() && featureToggleService.isLipVLipEnabled()) {
+        if (!stitchEnabled && caseData.isLipvLipOneVOne() && featureToggleService.isLipVLipEnabled()) {
             List<DocumentMetaData> documentMetaDataList = fetchDocumentsToStitch(caseData, sealedForm);
             if (documentMetaDataList.size() > 1) {
                 CaseDocument stitchedDocument = civilDocumentStitchingService.bundle(
Index: dashboard-notifications/src/main/java/uk/gov/hmcts/reform/dashboard/services/DashboardScenariosService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dashboard-notifications/src/main/java/uk/gov/hmcts/reform/dashboard/services/DashboardScenariosService.java b/dashboard-notifications/src/main/java/uk/gov/hmcts/reform/dashboard/services/DashboardScenariosService.java
--- a/dashboard-notifications/src/main/java/uk/gov/hmcts/reform/dashboard/services/DashboardScenariosService.java	(revision 97207e094da677d088b1fdac8c20ca72a7acf321)
+++ b/dashboard-notifications/src/main/java/uk/gov/hmcts/reform/dashboard/services/DashboardScenariosService.java	(date 1718789780992)
@@ -68,14 +68,14 @@
 
         scenario.getNotificationsToCreate().forEach((templateName, requestParamsKeys) -> {
 
-            Optional<NotificationTemplateEntity> notificationTemplate = notificationTemplateRepository
+            List<NotificationTemplateEntity> notificationTemplate = notificationTemplateRepository
                 .findByName(templateName);
 
             // build notification eng and wales
             //Supported templates "The ${animal} jumped over the ${target}."
             // "The number is ${undefined.property:-42}."
             List<String> keys =  Arrays.asList(requestParamsKeys);
-            notificationTemplate.ifPresent(template -> {
+            notificationTemplate.forEach(template -> {
                 Map<String, Object> templateParams = scenarioRequestParams.getParams().entrySet().stream()
                     .filter(e -> !keys.isEmpty() && keys.contains(e.getKey()))
                     .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));
@@ -156,10 +156,10 @@
     private void deleteNotificationForScenario(ScenarioEntity scenario, String uniqueCaseIdentifier) {
         Arrays.asList(scenario.getNotificationsToDelete()).forEach(templateName -> {
 
-            Optional<NotificationTemplateEntity> templateToRemove = notificationTemplateRepository
+            List<NotificationTemplateEntity> templateToRemove = notificationTemplateRepository
                 .findByName(templateName);
 
-            templateToRemove.ifPresent(template -> {
+            templateToRemove.forEach(template -> {
                 int noOfRowsRemoved = dashboardNotificationService.deleteByNameAndReferenceAndCitizenRole(
                     template.getName(),
                     uniqueCaseIdentifier,
Index: src/main/java/uk/gov/hmcts/reform/civil/service/FeatureToggleService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uk/gov/hmcts/reform/civil/service/FeatureToggleService.java b/src/main/java/uk/gov/hmcts/reform/civil/service/FeatureToggleService.java
--- a/src/main/java/uk/gov/hmcts/reform/civil/service/FeatureToggleService.java	(revision 97207e094da677d088b1fdac8c20ca72a7acf321)
+++ b/src/main/java/uk/gov/hmcts/reform/civil/service/FeatureToggleService.java	(date 1718789781113)
@@ -35,11 +35,11 @@
     }
 
     public boolean isPinInPostEnabled() {
-        return this.featureToggleApi.isFeatureEnabled("pin-in-post");
+        return true;
     }
 
     public boolean isPbaV3Enabled() {
-        return this.featureToggleApi.isFeatureEnabled("pba-version-3-ways-to-pay");
+        return true;
     }
 
     public boolean isRPAEmailEnabled() {
@@ -63,11 +63,11 @@
     }
 
     public boolean isLipVLipEnabled() {
-        return featureToggleApi.isFeatureEnabled("cuiReleaseTwoEnabled");
+        return true;
     }
 
     public boolean isDashboardServiceEnabled() {
-        return featureToggleApi.isFeatureEnabled("dashboard-service");
+        return true;
     }
 
     public boolean isLocationWhiteListedForCaseProgression(String locationEpimms) {
@@ -87,7 +87,7 @@
     }
 
     public boolean isCaseProgressionEnabled() {
-        return featureToggleApi.isFeatureEnabled("cui-case-progression");
+        return true;
     }
 
     public boolean isEarlyAdoptersEnabled() {
Index: src/main/java/uk/gov/hmcts/reform/civil/utils/HearingFeeUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uk/gov/hmcts/reform/civil/utils/HearingFeeUtils.java b/src/main/java/uk/gov/hmcts/reform/civil/utils/HearingFeeUtils.java
--- a/src/main/java/uk/gov/hmcts/reform/civil/utils/HearingFeeUtils.java	(revision 97207e094da677d088b1fdac8c20ca72a7acf321)
+++ b/src/main/java/uk/gov/hmcts/reform/civil/utils/HearingFeeUtils.java	(date 1718789781139)
@@ -45,9 +45,9 @@
         }
 
         if (claimTrack.equals("SMALL_CLAIM")) {
-            return hearingFeesService.getFeeForHearingSmallClaims(claimAmount);
+            return Fee.builder().calculatedAmountInPence(new BigDecimal(1000)).code("1").version("1").build();
         } else if (claimTrack.equals("FAST_CLAIM")) {
-            return hearingFeesService.getFeeForHearingFastTrackClaims(claimAmount);
+            return Fee.builder().calculatedAmountInPence(new BigDecimal(20000)).code("1").version("1").build();
         } else {
             return hearingFeesService.getFeeForHearingMultiClaims(claimAmount);
         }
